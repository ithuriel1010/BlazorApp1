// <auto-generated />
using System;
using EFGetStarted;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BazaDanych.Migrations
{
    [DbContext(typeof(BloggingContext))]
    partial class BloggingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EFGetStarted.AwariaWiedza", b =>
                {
                    b.Property<int>("AwariaWiedzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("AwariaWiedzaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("AwariaWiedza");
                });

            modelBuilder.Entity("EFGetStarted.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("EFGetStarted.Choroba", b =>
                {
                    b.Property<int>("ChorobaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("text");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("ChorobaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("Choroba");
                });

            modelBuilder.Entity("EFGetStarted.DoswiadczenieZSeniorem", b =>
                {
                    b.Property<int>("DoswiadczenieZSenioremId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("DoswiadczenieZSenioremId");

                    b.HasIndex("RespondentId");

                    b.ToTable("DoswiadczenieZSeniorem");
                });

            modelBuilder.Entity("EFGetStarted.MonitoringOdczucia", b =>
                {
                    b.Property<int>("MonitoringOdczuciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("MonitoringOdczuciaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("MonitoringOdczucia");
                });

            modelBuilder.Entity("EFGetStarted.MonitoringWiedza", b =>
                {
                    b.Property<int>("MonitoringWiedzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("MonitoringWiedzaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("MonitoringWiedza");
                });

            modelBuilder.Entity("EFGetStarted.OdczuciawDomu", b =>
                {
                    b.Property<int>("OdczuciawDomuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("OdczuciawDomuId");

                    b.HasIndex("RespondentId");

                    b.ToTable("OdczuciawDomu");
                });

            modelBuilder.Entity("EFGetStarted.OsobaBliska", b =>
                {
                    b.Property<int>("OsobaBliskaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("text");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("OsobaBliskaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("OsobaBliska");
                });

            modelBuilder.Entity("EFGetStarted.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("EFGetStarted.Respondent", b =>
                {
                    b.Property<int>("RespondentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Grupa")
                        .HasColumnType("boolean");

                    b.Property<bool>("Sex")
                        .HasColumnType("boolean");

                    b.Property<int>("Wiek")
                        .HasColumnType("integer");

                    b.Property<string>("Wyksztalcenie")
                        .HasColumnType("text");

                    b.HasKey("RespondentId");

                    b.ToTable("Respondent");
                });

            modelBuilder.Entity("EFGetStarted.StanFizyczny", b =>
                {
                    b.Property<int>("StanFizycznyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("StanFizycznyId");

                    b.HasIndex("RespondentId");

                    b.ToTable("StanFizyczny");
                });

            modelBuilder.Entity("EFGetStarted.TechnologiaWiedza", b =>
                {
                    b.Property<int>("TechnologiaWiedzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Poziom")
                        .HasColumnType("integer");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("integer");

                    b.HasKey("TechnologiaWiedzaId");

                    b.HasIndex("RespondentId");

                    b.ToTable("TechnologiaWiedza");
                });

            modelBuilder.Entity("EFGetStarted.AwariaWiedza", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("AwariaWiedzas")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.Choroba", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("Choroby")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.DoswiadczenieZSeniorem", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("DoswiadczenieZSeniorems")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.MonitoringOdczucia", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("MonitoringOdczucias")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.MonitoringWiedza", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany()
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.OdczuciawDomu", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("OdczuciawDomus")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.OsobaBliska", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("OsobyBliskie")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.Post", b =>
                {
                    b.HasOne("EFGetStarted.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFGetStarted.StanFizyczny", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("StanyFizyczne")
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("EFGetStarted.TechnologiaWiedza", b =>
                {
                    b.HasOne("EFGetStarted.Respondent", "Respondent")
                        .WithMany("TechnologiaWiedzas")
                        .HasForeignKey("RespondentId");
                });
#pragma warning restore 612, 618
        }
    }
}
